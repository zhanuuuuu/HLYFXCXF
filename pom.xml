<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.1.0.RELEASE</version>
		<!--<version>1.5.9.RELEASE</version>  这是真是的版本号-->
		<relativePath/>
		<!-- lookup parent from repository  2.1.0.RELEASE -->
	</parent>
	<groupId>com.hlyfxcx</groupId>
	<artifactId>hlyfxcx</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>jar</packaging>
	<name>hlyfxcx</name>
	<description>Demo project for Spring Boot</description>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>
		<java.home>G:/jdk8/Java/jdk1.8.0_101</java.home>

		<spring-cloud.version>Finchley.RELEASE</spring-cloud.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>

			<exclusions>
				<exclusion>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-logging</artifactId>
				</exclusion>
				<!-- 移除嵌入式tomcat插件 -->
				<!--<exclusion>-->
				<!--<groupId>org.springframework.boot</groupId>-->
				<!--<artifactId>spring-boot-starter-tomcat</artifactId>-->
				<!--</exclusion>-->

			</exclusions>


		</dependency>




		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>1.7.21</version>
		</dependency>


		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>1.7.21</version>
		</dependency>
		<!--以上是输出日志到文件的-->

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-aop</artifactId>
			<version>1.5.2.RELEASE</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId> spring-boot-starter-data-redis</artifactId>
			<version>1.5.2.RELEASE</version>
		</dependency>

		<!-- Spring Boot Mybatis 依赖 -->
		<dependency>
			<groupId>org.mybatis.spring.boot</groupId>
			<artifactId>mybatis-spring-boot-starter</artifactId>
			<version>1.3.1</version>
		</dependency>

		<!-- Druid 数据连接池依赖 -->
		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>druid</artifactId>
			<version>1.0.18</version>
		</dependency>

		<!--SQL Server数据库驱动依赖, mvn本地下载安装-->
		<dependency>
			<groupId>com.microsoft.sqlserver</groupId>
			<artifactId>sqljdbc42</artifactId>
			<version>4.2</version>
		</dependency>

		<dependency>
			<groupId>org.json</groupId>
			<artifactId>json</artifactId>
			<version>20170516</version>
		</dependency>

		<dependency>
			<groupId>com.google.code.gson</groupId>
			<artifactId>gson</artifactId>
			<version>2.8.9</version>
		</dependency>
		<!--
		-->
		<dependency>
			<groupId>org.apache.commons.dbcp2</groupId>
			<artifactId>dbcp2</artifactId>
			<version>2.1.1</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/commons-dbcp/commons-dbcp -->
		<!-- https://mvnrepository.com/artifact/org.apache.commons/commons-pool2
		-->
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-pool2</artifactId>
			<version>2.4.2</version>
		</dependency>

		<!-- https://mvnrepository.com/artifact/net.sf.json-lib/json-lib-ext-spring
		-->
		<dependency>
			<groupId>net.sf.json-lib</groupId>
			<artifactId>json-lib-ext-spring</artifactId>
			<version>1.0.2</version>
		</dependency>

		<!--fastjson-->
		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>fastjson</artifactId>
			<version>1.2.8</version>
		</dependency>

		<!-- 再在你的配置类开头加上@PropertySource("classpath:your.properties")，其余用法与加载yml的配置一样 -->
		<!--<dependency>-->
		<!--<groupId>org.springframework.boot</groupId>-->
		<!--<artifactId>spring-boot-configuration-processor</artifactId>-->
		<!--<optional>true</optional>-->
		<!--</dependency>-->

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-thymeleaf</artifactId>
		</dependency>

		<dependency>
			<groupId>com.auth0</groupId>
			<artifactId>java-jwt</artifactId>
			<version>3.2.0</version>
		</dependency>

		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>5.1.10</version>
		</dependency>

		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-io</artifactId>
			<version>1.3.2</version>
		</dependency>


		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<version>1.16.18</version>
		</dependency>

		<!--ehcache  数据缓存测试用的  不用参考-->
		<dependency>
			<groupId>net.sf.ehcache</groupId>
			<artifactId>ehcache</artifactId>
			<version>2.10.2</version>
		</dependency>

		<!--<dependency>-->
		<!--<groupId>org.springframework.kafka</groupId>-->
		<!--<artifactId>spring-kafka</artifactId>-->
		<!--</dependency>-->
		<!-- 添加 gson 依赖 -->
		<dependency>
			<groupId>com.google.code.gson</groupId>
			<artifactId>gson</artifactId>
			<version>2.8.9</version>
		</dependency>

		<!-- Swagger2   Restful 在线编辑器-->
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger2</artifactId>
			<version>2.6.1</version>
		</dependency>

		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger-ui</artifactId>
			<version>2.6.1</version>
		</dependency>



        <!--<dependency>-->
		<!--<groupId>org.springframework.boot</groupId>-->
		<!--<artifactId>spring-boot-starter-actuator</artifactId>-->
		<!--<version>1.5.9.RELEASE</version>-->
		<!--</dependency>-->


		<!--微服务 注册与发现
<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>


		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-eureka</artifactId>
			<version>1.4.0.RELEASE</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-dependencies</artifactId>
			<version>Dalston.SR1</version>
			<type>pom</type>
			<scope>import</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-dependencies</artifactId>
			<version>1.5.9.RELEASE</version>
			<type>pom</type>
			<scope>import</scope>
		</dependency>



		-->

		<!-- actuator监控信息完善 -->



		<!--打包war用的
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-tomcat</artifactId>
			<scope>provided</scope>
		</dependency>
		-->
		<!--<dependency>-->
		<!--<groupId>javax.servlet</groupId>-->
		<!--<artifactId>javax.servlet-api</artifactId>-->
		<!--<version>3.1.0</version>-->
		<!--<scope>provided</scope>-->
		<!--</dependency>-->
	</dependencies>

	<!--练习kafka-->
	<!--<dependencyManagement>-->
	<!--<dependencies>-->
	<!--<dependency>-->
	<!--<groupId>org.springframework.cloud</groupId>-->
	<!--<artifactId>spring-cloud-dependencies</artifactId>-->
	<!--<version>${spring-cloud.version}</version>-->
	<!--<type>pom</type>-->
	<!--<scope>import</scope>-->
	<!--</dependency>-->
	<!--</dependencies>-->
	<!--</dependencyManagement>-->





	<build>
		<finalName>Hlyfxcx</finalName>
		<!--<finalName>Scan</finalName>-->
		<!--<resources>-->
		<!--<resource>-->
		<!--<directory>${basedir}/src/main/webapp</directory>-->
		<!--&lt;!&ndash;注意此次必须要放在此目录下才能被访问到&ndash;&gt;-->
		<!--<targetPath>META-INF/resources</targetPath>-->
		<!--<includes>-->
		<!--<include>**/**</include>-->
		<!--</includes>-->
		<!--</resource>-->
		<!--<resource>-->
		<!--<directory>${basedir}/src/main/resources</directory>-->
		<!--<includes>-->
		<!--<include>**/**</include>-->
		<!--</includes>-->
		<!--</resource>-->
		<!--</resources>-->

		<plugins>
			<!--
			Spring Boot Maven plugin能够将Spring Boot应用打包为可执行的jar或war文件，然后以通常的方式运行Spring Boot应用。
			Spring Boot Maven plugin的最新版本为2017.6.8发布的1.5.4.RELEASE，要求Java 8, Maven 3.2及以后
			-DskipTests，不执行测试用例，但编译测试用例类生成相应的class文件至target/test-classes下。
			-Dmaven.test.skip=true，不执行测试用例，也不编译测试用例类。
			但是查看target目录，下面依然有test-classes目录，后来通过
			mvn clean package -Dmaven.test.skip=true
			-->
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.20.1</version>
				<configuration>
					<!-- 不指定单元测试 -->
					<skipTests>true</skipTests>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
					<compilerArguments>
						<bootclasspath>
							${java.home}/jre/lib/rt.jar;${java.home}/jre/lib/jce.jar
						</bootclasspath>
					</compilerArguments>
				</configuration>
			</plugin>


		</plugins>



	</build>

</project>
