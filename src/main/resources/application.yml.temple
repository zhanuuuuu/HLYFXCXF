
posmain:
  datasource:
    driver-class-name: com.microsoft.sqlserver.jdbc.SQLServerDriver
    url: jdbc:sqlserver://;databaseName=Posmanagement0001
    username: sa
    password: pcserver123.
  #连接池的配置信息
  druid:
    initialSize: 5   # 初始化大小，最小，最大
    minIdle: 5
    maxActive: 40
    maxWait: 60000    # 配置获取连接等待超时的时间
    timeBetweenEvictionRunsMillis: 60000  # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
    minEvictableIdleTimeMillis: 300000    # 配置一个连接在池中最小生存的时间，单位是毫秒
    validationQuery: SELECT 1
    testWhileIdle: true
    testOnBorrow: false
    testOnReturn: false
    poolPreparedStatements: true
    maxPoolPreparedStatementPerConnectionSize: 20
    filters: stat,wall,log4j
    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000

#多数据源配置
supermart:
  datasource:
    driver-class-name: com.microsoft.sqlserver.jdbc.SQLServerDriver
    url: jdbc:sqlserver://;databaseName=Supermarket
    username: sa
    password: pcserver123.
  #连接池的配置信息
  druid:
    initialSize: 5   # 初始化大小，最小，最大
    minIdle: 5
    maxActive: 40
    maxWait: 60000    # 配置获取连接等待超时的时间
    timeBetweenEvictionRunsMillis: 60000  # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
    minEvictableIdleTimeMillis: 300000    # 配置一个连接在池中最小生存的时间，单位是毫秒
    validationQuery: SELECT 1
    testWhileIdle: true
    testOnBorrow: false
    testOnReturn: false
    poolPreparedStatements: true
    maxPoolPreparedStatementPerConnectionSize: 20
    filters: stat,wall,log4j
    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000

server:
  port: 15689
  servlet:
    context-path: /Hlyfxcx

logging:
  config: log4j.properties
  #src/main/resources/log4j.properties
  #下面可以不用管   需要的话可以开启  前提是集成eureka并开启euraka的服务

info:
  app.name: scan
  company.name: www.hlyf.com
  build.artifactId: @project.artifactId@
  build.version: @project.version@
debug: true







